name: Coverage Report

on: [push]

jobs:
  check_coverage:
    permissions:
      contents: write
    runs-on: ${{ github.repository_owner == 'EpitechPromo2027' && 'self-hosted' || 'ubuntu-latest' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Cache GHCup
        uses: actions/cache@v4
        id: ghcup-cache
        with:
          path: /home/runner/.ghcup
          key: ${{ runner.os }}-ghcup-${{ hashFiles('**/*.cabal') }}
          restore-keys: |
            ${{ runner.os }}-ghcup-

      - name: Cache Cabal
        uses: actions/cache@v4
        id: cabal-cache
        with:
          path: /home/runner/.cabal
          key: ${{ runner.os }}-cabal-${{ hashFiles('**/*.cabal') }}
          restore-keys: |
            ${{ runner.os }}-cabal-

      - name: Cache Deno
        uses: actions/cache@v4
        if: github.ref == 'refs/heads/main'
        id: deno-cache
        with:
          path: /home/runner/.deno
          key: ${{ runner.os }}-deno-${{ hashFiles('**/*.ts') }}
          restore-keys: |
            ${{ runner.os }}-deno-

      - name: Cache Chrome
        uses: actions/cache@v4
        if: github.ref == 'refs/heads/main'
        id: chrome-cache
        with:
          path: /opt/hostedtoolcache/setup-chrome/chromium
          key: ${{ runner.os }}-chrome-${{ hashFiles('**/*.ts') }}
          restore-keys: |
            ${{ runner.os }}-chrome-

      - name: Install required packages
        run: sudo apt update && sudo apt install -y build-essential libffi-dev libgmp-dev zlib1g-dev

      - name: Setup Haskell
        if: steps.cabal-cache.outputs.cache-hit != 'true' && steps.ghcup-cache.outputs.cache-hit != 'true'
        uses: ./external/haskell-setup
        with:
          ghc-version: 9.4.8
          cabal-version: 3.12.1.0

      - name: Setup Deno
        if: steps.deno-cache.outputs.cache-hit != 'true' && github.ref == 'refs/heads/main'
        uses: ./external/setup-deno
        with:
          deno-version: v2.x

      - name: Setup Chrome
        uses: ./external/setup-chrome
        if: steps.chrome-cache.outputs.cache-hit != 'true' && github.ref == 'refs/heads/main'
        id: setup-chrome
        with:
          chrome-version: stable
          install-dependencies: true

      - name: Install dependencies
        if: steps.cabal-cache.outputs.cache-hit != 'true'
        run: |
          cabal update
          cabal install hspec-discover hpc-codecov --overwrite-policy=always

      - name: Setup environment
        if: steps.cabal-cache.outputs.cache-hit == 'true' && steps.ghcup-cache.outputs.cache-hit == 'true'
        run: |
            echo "/home/runner/.cabal/bin" >> $GITHUB_PATH
            echo "/home/runner/.ghcup/bin" >> $GITHUB_PATH

      - name: Build project
        run: cabal build

      - name: Test project
        run: |
          cabal configure --enable-coverage
          cabal test

      - name: Generate coverage report
        run: |
          hpc-codecov cabal:glados-test --exclude Main,Paths_glados --out codecov.json --format codecov --verbose

      - name: Publish coverage report to Discord
        if: github.ref == 'refs/heads/main'
        run: |
          deno run -A scripts/publish-coverage.ts ${{ secrets.WEBHOOK_URL }} ${{ steps.setup-chrome.outputs.chrome-path }}

      - name: Send coverage report to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: ${{ github.repository }}

      - name: Generate Haddock documentation
        if: github.ref == 'refs/heads/main'
        run: |
          cabal haddock --haddock-html --haddock-hyperlink-source --haddock-quickjump
          echo "DOCS_DIR=$(find dist-newstyle/build -type d -path '*/doc/html/glados' | head -n 1)" >> $GITHUB_ENV
  
      - name: Deploy Haddock to GitHub Pages
        uses: ./external/actions-gh-pages
        if: github.ref == 'refs/heads/main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ${{ env.DOCS_DIR }}
  